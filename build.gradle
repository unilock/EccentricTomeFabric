plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
}

version = "${project.mod_version}+${project.minecraft_version}+fabric"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
         name = "ParchmentMC"
         url = "https://maven.parchmentmc.org/"
     }
	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}
}

loom {
    mods {
		"eccentrictome" {
			sourceSet("main")
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_mappings}@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.minecraftforge:forgeconfigapiport-fabric:${project.fcapi_version}"

	// Forge Config API Port
	implementation "com.electronwill.night-config:core:3.6.5"
	implementation "com.electronwill.night-config:toml:3.6.5"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}
